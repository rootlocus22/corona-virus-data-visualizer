{"version":3,"sources":["components/pie-chart/pieChart.js","components/bar-chart/barChart.js","components/table-view/tableView.js","App.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","PieChart","props","console","log","useEffect","chart","am4charts","data","pieSeries","series","push","dataFields","value","category","innerRadius","slices","template","stroke","strokeWidth","strokeOpacity","labels","disabled","ticks","states","getKey","properties","shiftRadius","scale","window","screen","availWidth","legend","responsive","enabled","rules","relevant","target","state","stateId","id","am4themes_kelly","BarChart","categoryAxis","xAxes","title","text","renderer","grid","location","yAxes","valueY","categoryX","name","tooltipText","series2","series3","stacked","cursor","scrollbarX","scrollbarY","useStyles","makeStyles","table","minWidth","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","TableRow","TableView","useState","rows","setRows","classes","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableBody","map","row","key","scope","confirmed","active","recovered","deaths","ExpansionPanel","border","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","padding","spacing","MuiExpansionPanelDetails","CustomizedExpansionPanels","setExpanded","setData","a","fetch","response","json","transformedData","statewise","shift","fetchStateData","handleChange","panel","event","newExpanded","square","onChange","expandIcon","aria-controls","Typography","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.148d2065.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport './pieChart.css'\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst PieChart = (props) => {\r\n    console.log(props);\r\n    useEffect(() => {\r\n        var chart = am4core.create(\"pieChartDiv\", am4charts.PieChart3D);\r\n        chart.data = props.data;\r\n        // Add and configure Series\r\n        var pieSeries = chart.series.push(new am4charts.PieSeries3D());\r\n        pieSeries.dataFields.value = \"active\";\r\n        pieSeries.dataFields.category = \"state\";\r\n        chart.innerRadius = am4core.percent(40);\r\n        pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n        pieSeries.slices.template.strokeWidth = 2;\r\n        pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n        // Disabling labels and ticks on inner circle\r\n        pieSeries.labels.template.disabled = true;\r\n        pieSeries.ticks.template.disabled = true;\r\n        // Put a thick white border around each Slice\r\n        pieSeries.slices.template.states.getKey(\"hover\").properties.shiftRadius = 0;\r\n        pieSeries.slices.template.states.getKey(\"hover\").properties.scale = 1.1;\r\n        // Add a legend\r\n        if(window.screen.availWidth > 600) {\r\n            chart.legend = new am4charts.Legend();\r\n        }\r\n        chart.responsive.enabled = true;\r\n\r\n        chart.responsive.rules.push({\r\n            relevant: function (target) {\r\n                return false;\r\n            },\r\n            state: function (target, stateId) {\r\n                return;\r\n            }\r\n        });\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"pieChartDiv\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PieChart;","import React, { useEffect } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport am4themes_kelly from \"@amcharts/amcharts4/themes/kelly\";\r\nimport './barChart.css'\r\nam4core.useTheme(am4themes_animated);\r\nam4core.useTheme(am4themes_kelly);\r\n\r\nconst BarChart = (props) => {\r\n    useEffect(() => {\r\n        var chart = am4core.create(\"barChartDiv\", am4charts.XYChart3D);\r\n        // Add data\r\n        chart.data = props.data;\r\n        // Create axes\r\n        var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"state\";\r\n        categoryAxis.title.text = \"State covid cases\";\r\n        categoryAxis.renderer.grid.template.location = 0;\r\n        // categoryAxis.renderer.minGridDistance = 20;\r\n        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.title.text = \"Active Cases\";\r\n        // Create series\r\n        var series = chart.series.push(new am4charts.ColumnSeries3D());\r\n        series.dataFields.valueY = \"active\";\r\n        series.dataFields.categoryX = \"state\";\r\n        series.name = \"Active\";\r\n        series.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n        // This has no effect\r\n        // series.stacked = true;\r\n        var series2 = chart.series.push(new am4charts.ColumnSeries3D());\r\n        series2.dataFields.valueY = \"recovered\";\r\n        series2.dataFields.categoryX = \"state\";\r\n        series2.name = \"Recovered\";\r\n        series2.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n        // Do not try to stack on top of previous series\r\n        // series2.stacked = true;\r\n        var series3 = chart.series.push(new am4charts.ColumnSeries3D());\r\n        series3.dataFields.valueY = \"deaths\";\r\n        series3.dataFields.categoryX = \"state\";\r\n        series3.name = \"Deaths\";\r\n        series3.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n        series3.stacked = true;\r\n        // Add cursor\r\n        chart.cursor = new am4charts.XYCursor();\r\n        // Add legend\r\n        chart.legend = new am4charts.Legend();\r\n        chart.scrollbarX = new am4core.Scrollbar();\r\n        chart.scrollbarY = new am4core.Scrollbar();\r\n        chart.responsive.enabled = true;\r\n\r\n        chart.responsive.rules.push({\r\n            relevant: function (target) {\r\n                return false;\r\n            },\r\n            state: function (target, stateId) {\r\n                return;\r\n            }\r\n        });\r\n\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"barChartDiv\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n    \r\n    },\r\n  }))(TableRow);\r\n\r\n\r\n\r\nexport default function TableView(props) {\r\n  const [rows, setRows] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setRows(props.data);\r\n  }, [props.data]);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>STATE</StyledTableCell>\r\n            <StyledTableCell>CNFD</StyledTableCell>\r\n            <StyledTableCell>ACTV</StyledTableCell>\r\n            <StyledTableCell>RCVRD</StyledTableCell>\r\n            <StyledTableCell>DETH</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.state}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.state}\r\n              </StyledTableCell>\r\n              <StyledTableCell>{row.confirmed}</StyledTableCell>\r\n              <StyledTableCell >{row.active}</StyledTableCell>\r\n              <TableCell >{row.recovered}</TableCell>\r\n              <StyledTableCell >{row.deaths}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport PieChart from './components/pie-chart/pieChart';\nimport BarChart from './components/bar-chart/barChart';\nimport TableView from './components/table-view/tableView';\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n   \n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n      backgroundColor: '#f5f5f5',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\nexport default function CustomizedExpansionPanels() {\n  const [expanded, setExpanded] = useState('panel1');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function fetchStateData() {\n      let response = await fetch(`https://api.covid19india.org/data.json`);\n      let data = await response.json();\n      let transformedData = data.statewise.map(({ state, active, confirmed, recovered, deaths }) => {\n          return { state, active, confirmed, recovered, deaths }\n      });\n      transformedData.shift();\n      setData(transformedData);\n  };\n  fetchStateData();\n  }, [setData])\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <ExpansionPanelSummary  expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n          <Typography>Tabular Data Statewise</Typography>\n        </ExpansionPanelSummary>\n          <TableView data={data}></TableView>\n      </ExpansionPanel>\n      <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n        <ExpansionPanelSummary  expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2d-content\" id=\"panel2d-header\">\n          <Typography>Covid19 Cases in India Overview</Typography>\n        </ExpansionPanelSummary>\n          <PieChart data={data}></PieChart>\n      </ExpansionPanel>\n      <ExpansionPanel square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n        <ExpansionPanelSummary  expandIcon={<ExpandMoreIcon />} aria-controls=\"panel3d-content\" id=\"panel3d-header\">\n          <Typography>State wise bar chart</Typography>\n        </ExpansionPanelSummary>\n         <BarChart data={data}></BarChart>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}